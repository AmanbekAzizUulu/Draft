Если путаете Comparator<T> и Comparable<T>, воспользуйтесь нижеприведенной ассоциацией

Comparator<T> - это такое слово, которое имеет окончание "-or", который свойственен автоматическим машинам. 
Соответственно, компаратор - это машина, которая выполняет автономно универсально. А значит она не привязана к классу. 
Машина "Компаратор" тяжеловесна, поэтому её нельзя нести на спине или плечах объекта произвольного типа.
Поэтому компаратор не принадлежит какому-то объекту. Эта машина хавает два параметра и сравнивает их. 
Выдаёт результат сравнения двух сторон и не представляет интересы одной из них.

А интерфейс Comparable<T> - это кличка, что в переводе с английского означает "способный быть объектом сравнения". 
Это ярлык, который вешают на какую-нибудь сущность, то есть имплементируют. 
Объект, который имеет кличку "Компэрэйбл" является эгоистом. 
Он заботится только о себе. Поэтому если он больше другого объекта, то он гордится этим и скажет, что он больше. 
Но он не скажет, что другой объект меньше, потому что он думает только о себе. 
У объекта своё эго. Поэтому он имеет метод int compareTo(T o) и принимает только один параметр, который сравнивает с собой же.

Не благодарите!